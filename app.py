import gradio as gr
import os
import json
from gdown import download as gdown_download

# --- F√°jl- √©s Be√°ll√≠t√°skezel√©s ---
TEMP_DIR = "data"
os.makedirs(TEMP_DIR, exist_ok=True)
VIDEO_PATH = os.path.join(TEMP_DIR, "video.mp4")
SUBTITLE_PATH = os.path.join(TEMP_DIR, "subtitle.vtt")
SETTINGS_FILE = os.path.join(TEMP_DIR, "settings.json")

# Alap√©rtelmezett be√°ll√≠t√°sok
DEFAULT_SETTINGS = {
    "color": "#FFFFFF",
    "size": "medium",
    "background": "transparent",
    "position": "bottom"
}

def load_settings():
    """Beolvassa a mentett felirat be√°ll√≠t√°sokat a JSON f√°jlb√≥l."""
    if os.path.exists(SETTINGS_FILE):
        with open(SETTINGS_FILE, 'r') as f:
            return json.load(f)
    return DEFAULT_SETTINGS

def save_settings(settings):
    """Elmenti a felirat be√°ll√≠t√°sokat a JSON f√°jlba."""
    with open(SETTINGS_FILE, 'w') as f:
        json.dump(settings, f)

# A kezdeti be√°ll√≠t√°sok bet√∂lt√©se
subtitle_settings = load_settings()

# --- F√ºggv√©nyek ---

def download_files(video_link, subtitle_link):
    """
    Let√∂lti a vide√≥t √©s a feliratf√°jlt a nyilv√°nos Google Drive linkekr≈ël.
    """
    results = []
    
    # 1. T√∂r√∂lj√ºk a kor√°bbi f√°jlokat (helytakar√©koss√°g miatt)
    if os.path.exists(VIDEO_PATH): os.remove(VIDEO_PATH)
    if os.path.exists(SUBTITLE_PATH): os.remove(SUBTITLE_PATH)
    
    # 2. Vide√≥ let√∂lt√©se
    try:
        gdown_download(video_link, VIDEO_PATH, quiet=True)
        results.append(f"‚úÖ Vide√≥ let√∂ltve.")
    except Exception as e:
        results.append(f"‚ùå Hiba a vide√≥ let√∂lt√©sekor: Ellen≈ërizd a linket √©s a jogosults√°gokat.")

    # 3. Felirat let√∂lt√©se
    if subtitle_link:
        try:
            gdown_download(subtitle_link, SUBTITLE_PATH, quiet=True)
            results.append(f"‚úÖ Felirat let√∂ltve.")
        except Exception as e:
            results.append(f"‚ùå Hiba a felirat let√∂lt√©sekor.")
    else:
         results.append("‚ÑπÔ∏è Felirat link nem lett megadva.")

    # A lej√°tsz√≥ friss√≠t√©s√©hez sz√ºks√©ges adatok:
    video_file = VIDEO_PATH if os.path.exists(VIDEO_PATH) else None
    subtitle_file = SUBTITLE_PATH if os.path.exists(SUBTITLE_PATH) else None
    
    return "\n".join(results), gr.Video.update(value=video_file, subtitles=subtitle_file)

def set_subtitle_style(color, size, background, position):
    """
    Elmenti a felhaszn√°l√≥ felirat be√°ll√≠t√°sait a JSON f√°jlba.
    """
    global subtitle_settings
    subtitle_settings.update({
        "color": color,
        "size": size,
        "background": background,
        "position": position
    })
    save_settings(subtitle_settings)
    
    # Mivel a Gradio nat√≠v lej√°tsz√≥ja nem t√°mogatja a dinamikus CSS-t,
    # ez a l√©p√©s csak a be√°ll√≠t√°sok perzisztens ment√©s√©t biztos√≠tja.
    # A felhaszn√°l√≥ l√°thatja, hogy a be√°ll√≠t√°s mentve lett.
    return f"‚úÖ Feliratst√≠lus mentve! Ez a be√°ll√≠t√°s legk√∂zelebb is el√©rhet≈ë lesz (de a megjelen√≠t√©s a b√∂ng√©sz≈ë be√°ll√≠t√°sait√≥l f√ºgg)."

# --- Gradio UI fel√©p√≠t√©se ---

with gr.Blocks(title="Render Vide√≥lej√°tsz√≥") as demo:
    gr.Markdown("# üé¨ Render √Ålland√≥ Vide√≥lej√°tsz√≥")
    gr.Markdown("Ez az alkalmaz√°s √°lland√≥an el√©rhet≈ë a Render-en. M√°sold be a **nyilv√°nos** Google Drive linkeket.")
    
    # 1. Beviteli mez≈ëk
    with gr.Row():
        video_input = gr.Textbox(label="Google Drive Vide√≥ Nyilv√°nos Linkje", placeholder="Pl. https://drive.google.com/file/d/...")
        subtitle_input = gr.Textbox(label="Google Drive Felirat Nyilv√°nos Linkje (Opcion√°lis)", placeholder="Pl. https://drive.google.com/file/d/...")
        
    download_btn = gr.Button("‚¨áÔ∏è F√°jlok Let√∂lt√©se √©s Lej√°tsz√≥ Friss√≠t√©se")
    download_output = gr.Textbox(label="Let√∂lt√©s √Ållapota", interactive=False)
    
    # 2. Vide√≥lej√°tsz√≥
    player = gr.Video(
        label="A Vide√≥lej√°tsz√≥ (A felirat automatikusan megjelenik, ha l√©tezik)",
        width=800,
        subtitles=SUBTITLE_PATH if os.path.exists(SUBTITLE_PATH) else None # Kezdeti felirat bet√∂lt√©se
    )
    
    # Kapcsol√≥d√°s
    download_btn.click(
        fn=download_files,
        inputs=[video_input, subtitle_input],
        outputs=[download_output, player]
    )

    gr.Markdown("---")
    
    # 3. Felirat Be√°ll√≠t√°sok (Perzisztens Ment√©ssel)
    settings = load_settings()
    gr.Markdown("## üé® Felirat St√≠lus Be√°ll√≠t√°sok (Perzisztens Ment√©s)")

    with gr.Row():
        color_input = gr.Textbox(label="Bet≈±sz√≠n (CSS k√≥d)", value=settings["color"])
        size_input = gr.Radio(["small", "medium", "large"], label="M√©ret", value=settings["size"])
        background_input = gr.Textbox(label="H√°tt√©r (CSS k√≥d)", value=settings["background"])
        position_input = gr.Radio(["top", "bottom"], label="Elhelyezked√©s", value=settings["position"])
        
    style_btn = gr.Button("üíæ Felirat St√≠lus Ment√©se")
    style_output = gr.Textbox(label="St√≠lus Ment√©s √Ållapota", interactive=False)

    style_btn.click(
        fn=set_subtitle_style,
        inputs=[color_input, size_input, background_input, position_input],
        outputs=style_output
    )


# Az alkalmaz√°s elind√≠t√°sa
if __name__ == "__main__":
    # Renderen a portot a k√∂rnyezeti v√°ltoz√≥ (PORT) hat√°rozza meg
    port = int(os.environ.get("PORT", 7860))
    # A Gradio a '0.0.0.0' c√≠men kell, hogy fusson a Render-en
    demo.launch(server_name="0.0.0.0", server_port=port)
