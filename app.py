import streamlit as st
import os
import json
from gdown import download as gdown_download

# --- F√°jl- √©s Be√°ll√≠t√°skezel√©s (V√°ltozatlan) ---
TEMP_DIR = "data"
os.makedirs(TEMP_DIR, exist_ok=True)
VIDEO_PATH = os.path.join(TEMP_DIR, "video.mp4")
SUBTITLE_PATH = os.path.join(TEMP_DIR, "subtitle.vtt")
SETTINGS_FILE = os.path.join(TEMP_DIR, "settings.json")

# Alap√©rtelmezett be√°ll√≠t√°sok
DEFAULT_SETTINGS = {
    "color": "#FFFFFF",
    "size": "medium",
    "background": "transparent",
    "position": "bottom"
}

# --- Be√°ll√≠t√°skezel≈ë F√ºggv√©nyek (V√°ltozatlan) ---

def load_settings():
    """Beolvassa a mentett felirat be√°ll√≠t√°sokat a JSON f√°jlb√≥l."""
    if os.path.exists(SETTINGS_FILE):
        with open(SETTINGS_FILE, 'r') as f:
            return json.load(f)
    return DEFAULT_SETTINGS

def save_settings(settings):
    """Elmenti a felirat be√°ll√≠t√°sokat a JSON f√°jlba."""
    with open(SETTINGS_FILE, 'w') as f:
        json.dump(settings, f)

# --- Let√∂lt≈ë F√ºggv√©ny (M√≥dos√≠tva) ---

def download_files(video_link, subtitle_link):
    """
    Let√∂lti a vide√≥t √©s a feliratf√°jlt.
    A st√°tusz √ºzeneteket egy list√°ban adja vissza.
    """
    results = []
    
    # 1. T√∂r√∂lj√ºk a kor√°bbi f√°jlokat
    if os.path.exists(VIDEO_PATH): os.remove(VIDEO_PATH)
    if os.path.exists(SUBTITLE_PATH): os.remove(SUBTITLE_PATH)
    
    # 2. Vide√≥ let√∂lt√©se
    if not video_link:
        results.append("‚ùå Hiba: A vide√≥ link megad√°sa k√∂telez≈ë.")
        return results

    try:
        gdown_download(video_link, VIDEO_PATH, quiet=True, fuzzy=True)
        results.append(f"‚úÖ Vide√≥ let√∂ltve.")
    except Exception as e:
        results.append(f"‚ùå Hiba a vide√≥ let√∂lt√©sekor: {e}")
        return results # Ha a vide√≥ sikertelen, a feliratot m√°r nem is pr√≥b√°ljuk

    # 3. Felirat let√∂lt√©se
    if subtitle_link:
        try:
            gdown_download(subtitle_link, SUBTITLE_PATH, quiet=True, fuzzy=True)
            results.append(f"‚úÖ Felirat let√∂ltve.")
        except Exception as e:
            results.append(f"‚ùå Hiba a felirat let√∂lt√©sekor: {e}")
    else:
         results.append("‚ÑπÔ∏è Felirat link nem lett megadva.")
         
    return results

# --- Streamlit Munkamenet √Ållapot (Session State) Inicializ√°l√°sa ---
# Ez t√°rolja az adatokat a szkript √∫jrafuttat√°sai k√∂z√∂tt

if 'status_message' not in st.session_state:
    st.session_state.status_message = "M√©g nem t√∂rt√©nt let√∂lt√©s."

if 'subtitle_settings' not in st.session_state:
    st.session_state.subtitle_settings = load_settings()

# --- Streamlit UI Fel√©p√≠t√©se ---

st.set_page_config(page_title="Streamlit Vide√≥lej√°tsz√≥", layout="wide")
st.title("üé¨ Streamlit √Ålland√≥ Vide√≥lej√°tsz√≥")
st.markdown("Ez az alkalmaz√°s √°lland√≥an el√©rhet≈ë a Render-en. M√°sold be a **nyilv√°nos** Google Drive linkeket.")

# 1. Beviteli mez≈ëk
with st.container(border=True):
    video_input = st.text_input("Google Drive Vide√≥ Nyilv√°nos Linkje", placeholder="Pl. https://drive.google.com/file/d/...")
    subtitle_input = st.text_input("Google Drive Felirat Nyilv√°nos Linkje (Opcion√°lis)", placeholder="Pl. https://drive.google.com/file/d/...")
    
    download_btn = st.button("‚¨áÔ∏è F√°jlok Let√∂lt√©se √©s Lej√°tsz√≥ Friss√≠t√©se")
    
    # Let√∂lt√©s gomb logik√°ja
    if download_btn:
        with st.spinner("Let√∂lt√©s folyamatban... Ez eltarthat egy ideig."):
            results = download_files(video_input, subtitle_input)
            # Elmentj√ºk az eredm√©nyt a session state-be, hogy az √∫jrafuttat√°s ut√°n is meglegyen
            st.session_state.status_message = "\n".join(results)
        # st.rerun() helyett a Streamlit automatikusan √∫jra fog futni
        # a gombnyom√°s ut√°n, √©s friss√≠ti a UI-t.

# 2. St√°tusz √©s Vide√≥lej√°tsz√≥
st.info(st.session_state.status_message) # Mindig ki√≠rjuk az utols√≥ st√°tuszt

video_file = VIDEO_PATH if os.path.exists(VIDEO_PATH) else None
subtitle_file = SUBTITLE_PATH if os.path.exists(SUBTITLE_PATH) else None

if video_file:
    st.video(video_file, subtitles=subtitle_file)
else:
    st.write("A vide√≥ a sikeres let√∂lt√©s ut√°n jelenik meg itt.")

st.divider()

# 3. Felirat Be√°ll√≠t√°sok (Perzisztens Ment√©ssel)
with st.expander("üé® Felirat St√≠lus Be√°ll√≠t√°sok (Perzisztens Ment√©s)"):
    settings = st.session_state.subtitle_settings
    
    # A Streamlit UI elemek
    color_input = st.text_input("Bet≈±sz√≠n (CSS k√≥d)", value=settings["color"])
    
    # A 'radio' index√©t be kell √°ll√≠tani
    size_options = ["small", "medium", "large"]
    size_index = size_options.index(settings["size"]) if settings["size"] in size_options else 1
    size_input = st.radio("M√©ret", size_options, index=size_index)
    
    background_input = st.text_input("H√°tt√©r (CSS k√≥d)", value=settings["background"])

    pos_options = ["top", "bottom"]
    pos_index = pos_options.index(settings["position"]) if settings["position"] in pos_options else 1
    position_input = st.radio("Elhelyezked√©s", pos_options, index=pos_index)
        
    style_btn = st.button("üíæ Felirat St√≠lus Ment√©se")

    if style_btn:
        new_settings = {
            "color": color_input,
            "size": size_input,
            "background": background_input,
            "position": position_input
        }
        save_settings(new_settings)
        # Friss√≠tj√ºk a session state-et is
        st.session_state.subtitle_settings = new_settings
        st.success("‚úÖ Feliratst√≠lus mentve! (A megjelen√©s a b√∂ng√©sz≈ët≈ël f√ºgg)")
